'' EluCad List Generator
'' Creates a shell command string from the CSV's generated by IT, Then runs the command through EluCad and sends
'' the XML to the folder used by the Elumatec.
'' Daniel Hazelton
Imports System.IO

Public Class Form1

    Private LIST_NUMBER As String
    Public SERVERLOCATION As String = "\\192.168.102.2\plant\SHOPDATA\Elumatec\"

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '' Load List
    '' Loads all CSV filenames from file location directory into the checkedlistbox.
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Private Sub Load_list()
        Dim FILES As String()
        ReDim FILES(-1)
        CheckedListBox1.Items.Clear()
        LIST_NUMBER = ListNumber_tbox.Text
        SERVERLOCATION = FileLocation_tbox.Text

        If My.Computer.FileSystem.DirectoryExists(SERVERLOCATION + LIST_NUMBER) Then
            FILES = Directory.GetFiles(SERVERLOCATION + LIST_NUMBER, "*.CSV")
            For Each foundFile As String In FILES
                CheckedListBox1.Items.Add(Path.GetFileName(foundFile))
            Next
        Else
            MsgBox("There is no data for this list.")
        End If

    End Sub

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '' Form Load
    '' Sets up the load size, minimum size, and focuses on the list field.
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        Me.Size = New Size(530, 656)
        MinimumSize = New Size(320, 656)
        Me.Show()
        FileLocation_tbox.Text = SERVERLOCATION
        ListNumber_tbox.Select()
    End Sub

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '' Load Button
    '' Runs Load List
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Private Sub LoadButton_Click(sender As Object, e As EventArgs) Handles LoadButton.Click
        Load_list()
    End Sub

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '' Generate Button
    '' Builds a string to be run on through a shell command which uses EluCad to
    '' Generate the cutlist XML's then copies it to SHOPDATA\ELUMATEC
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Private Sub GenerateButton_Click(sender As Object, e As EventArgs) Handles GenerateButton.Click
        GenerateButton.Enabled = False

        CheckedListBox1.BackColor = Color.LawnGreen

        Dim shell = CreateObject("WScript.Shell")
        Dim stringbuilder As String
        Dim completionString As String = ""

        For Each item In CheckedListBox1.CheckedItems

            If File.Exists("C:\elusoft\eluCad 4.0\bin\eluCad.exe") Then
                If File.Exists(SERVERLOCATION + LIST_NUMBER + "\" + item) Then

                    stringbuilder = """C:\elusoft\eluCad 4.0\bin\eluCad.exe""" + " /TARGET " + "SBZ628" + " /CSV " + Chr(34) +
                    SERVERLOCATION + LIST_NUMBER + "\" + item + Chr(34) + " /STO /NC /QUIET"

                    shell.run(stringbuilder, 1, True)

                    Dim xmlcomplete As String = "C:\elusoft\eluCad 4.0\user\output\SBZ628metriC\" + item.Substring(0, item.Length - 4)
                    If File.Exists(xmlcomplete + "_optimized.xml") Then
                        File.Copy(xmlcomplete + "_optimized.xml", "\\192.168.102.2\plant\SHOPDATA\ELUMATEC\" + item.Substring(0, item.Length - 4) + "_optimized.xml", True)
                        completionString = completionString + item + ", "
                        ' 25/09/2017 Added case for when list doesn't get optimized. 
                    ElseIf File.Exists(xmlcomplete + ".xml") Then
                        File.Copy(xmlcomplete + ".xml", "\\192.168.102.2\plant\SHOPDATA\ELUMATEC\" + item.Substring(0, item.Length - 4) + ".xml", True)
                        completionString = completionString + item + ", "
                    Else
                        CheckedListBox1.BackColor = Color.Red
                        MsgBox("Copy error: .XML file could not be found in C:\elusoft\eluCad 4.0\user\output\SBZ628metriC.")
                        GenerateButton.Enabled = True
                    End If
                Else
                    CheckedListBox1.BackColor = Color.Red
                    MsgBox("Error: file at " + SERVERLOCATION + LIST_NUMBER + "\" + item + " no longer exists")
                    GenerateButton.Enabled = True
                End If

            Else
                CheckedListBox1.BackColor = Color.Red
                MsgBox("Generation failed, EluCad software not found.")
                GenerateButton.Enabled = True
                Exit Sub
            End If

        Next

        CheckedListBox1.BackColor = Color.White
        MsgBox("Generation of: " + completionString + "Complete.")
        GenerateButton.Enabled = True
    End Sub

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '' ListBox KeyPress
    '' Loads List when Enter is pressed while inside the Listbox
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Private Sub ListNumber_tbox_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles ListNumber_tbox.KeyPress
        If e.KeyChar = Microsoft.VisualBasic.ChrW(Keys.Enter) Then
            Load_list()
        End If
    End Sub

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '' Select All Button
    '' Selects all fields in the Listbox
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Private Sub SelectAllButton_click(sender As Object, e As EventArgs) Handles SelectAllButton.Click
        For idx As Integer = 0 To CheckedListBox1.Items.Count - 1
            CheckedListBox1.SetItemChecked(idx, True)
        Next
    End Sub

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '' Select None Button
    '' Removes all selections from listbox.
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Private Sub SelectNoneButton_Click(sender As Object, e As EventArgs) Handles SelectNoneButton.Click
        For idx As Integer = 0 To CheckedListBox1.Items.Count - 1
            CheckedListBox1.SetItemChecked(idx, False)
        Next
    End Sub

    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '' Remake Button
    '' Opens Remake Generator form
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Private Sub RemakeButton_click(sender As Object, e As EventArgs) Handles RemakeButton.Click
        My.Forms.Form2.SERVERLOCATION = SERVERLOCATION
        My.Forms.Form2.Show()
    End Sub

End Class

